version: '4.34.3'
services:
  api-gateway-service:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5121:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - JwtOptions__SecretKey=${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      user-account-service:
        condition: service_healthy
      city-map-service:
        condition: service_healthy

  city-map-service:
    build:
      context: ./CityMapService
      dockerfile: Dockerfile
    ports:
      - "5122:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=CityMapDB;Username=postgres;Password=kjkjrgjwe2354fs
      - JwtOptions__SecretKey=${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://city-map-service:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  user-account-service:
    build:
      context: ./UserAccountService
      dockerfile: Dockerfile
    ports:
      - "5123:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=UserAccountDB;Username=postgres;Password=kjkjrgjwe2354fs
      - JwtOptions__SecretKey=${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://user-account-service:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" #adminka
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    container_name: theAgesPostgresDB
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "kjkjrgjwe2354fs"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      bash -c "docker-entrypoint.sh postgres & sleep 5 && psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'CityMapDB';\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE \"CityMapDB\";' && psql -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'UserAccountDB';\" | grep -q 1 || psql -U postgres -c 'CREATE DATABASE \"UserAccountDB\";' && wait"
volumes:
  postgres-data:
